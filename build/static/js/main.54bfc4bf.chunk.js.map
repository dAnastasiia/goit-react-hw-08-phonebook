{"version":3,"sources":["routes.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/Section/Section.js","components/PrivateRoute.js","components/PublicRoute.js","components/App/App.js","redux/store.js","index.js","redux/contacts/contacts-actions.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducers.js","redux/auth/auth-selectors.js","redux/contacts/contacts-reducers.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js"],"names":["routes","home","contacts","login","register","Navigation","isAuthenticated","useSelector","authSelectors","Nav","className","Link","href","UserMenu","dispatch","useDispatch","email","getUserEmail","Navbar","Collapse","Image","src","defaultAvatar","alt","width","roundedCircle","Text","Button","variant","type","onClick","authOperations","logOut","AuthNav","Item","AppBar","bg","Section","children","PrivateRoute","redirectTo","routeProps","to","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","getCurrentUser","fallback","exact","path","component","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","auth","persistReducer","authReducer","devTools","process","persist","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","actions","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","credentials","a","post","response","data","message","logIn","getState","persistedToken","get","initialUserState","name","user","createReducer","_","payload","error","combineReducers","state","items","filter","id","getFilter","contactsSelectors","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","includes","contactsOperations","addContact","number","then","catch","err","deleteContact","delete","fetchContacts"],"mappings":"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","file":"static/js/main.54bfc4bf.chunk.js","sourcesContent":["const routes = {\r\n  home: '/',\r\n  contacts: '/contacts',\r\n  login: '/login',\r\n  register: '/register',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport routes from '../../routes';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nexport default function Navigation() {\r\n  const isAuthenticated = useSelector(authSelectors.isAuthenticated);\r\n  return (\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href={routes.home}>Home</Nav.Link>\r\n      {isAuthenticated && <Nav.Link href={routes.contacts}>Contacts</Nav.Link>}\r\n    </Nav>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.fb653606.png\";","import React from 'react';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport { authOperations } from '../../redux/auth';\r\n\r\nimport { Navbar, Image, Button } from 'react-bootstrap';\r\n\r\nimport './UserMenu.scss';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(authSelectors.getUserEmail);\r\n  const onLogout = () => {\r\n    dispatch(authOperations.logOut());\r\n  };\r\n\r\n  return (\r\n    <Navbar.Collapse className=\"justify-content-end\">\r\n      <Image\r\n        src={defaultAvatar}\r\n        alt=\"Avatar\"\r\n        width=\"32\"\r\n        roundedCircle\r\n        className=\"user-item\"\r\n      />\r\n      <Navbar.Text className=\"user-item\">{email}</Navbar.Text>\r\n      <Button variant=\"outline-info\" type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </Button>\r\n    </Navbar.Collapse>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport routes from '../../routes';\r\n\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nconst AuthNav = () => (\r\n  <Nav>\r\n    <Nav.Item>\r\n      <Nav.Link href={routes.register}>Register</Nav.Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <Nav.Link href={routes.login}>Login</Nav.Link>\r\n    </Nav.Item>\r\n  </Nav>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nexport default function AppBar() {\r\n  const isAuthenticated = useSelector(authSelectors.isAuthenticated);\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Section.scss';\r\n\r\nconst Section = ({ children }) => (\r\n  <div className=\"Section\">\r\n    <div>{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PrivateRoute({ children, redirectTo, ...routeProps }) {\r\n  const isAuthenticated = useSelector(authSelectors.isAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PublicRoute({ children, redirectTo, ...routeProps }) {\r\n  const isAuthenticated = useSelector(authSelectors.isAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { Suspense, lazy, useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport AppBar from '../AppBar';\r\n\r\nimport Section from '../Section';\r\nimport routes from '../../routes';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../../redux/auth';\r\n\r\nimport PrivateRoute from '../PrivateRoute';\r\nimport PublicRoute from '../PublicRoute';\r\n\r\nimport './App.scss';\r\n\r\nconst HomeView = lazy(() =>\r\n  import('../../views/HomeView' /* webpackChunkName: \"home-view\" */),\r\n);\r\n\r\nconst RegisterView = lazy(() =>\r\n  import('../../views/RegisterView' /* webpackChunkName: \"register-view\" */),\r\n);\r\n\r\nconst LoginView = lazy(() =>\r\n  import('../../views/LoginView' /* webpackChunkName: \"login-view\" */),\r\n);\r\n\r\nconst ContactsView = lazy(() =>\r\n  import('../../views/ContactsView' /* webpackChunkName: \"contacts-view\" */),\r\n);\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <AppBar />\r\n\r\n      <Section>\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <Switch>\r\n            <Route exact path={routes.home}>\r\n              <HomeView />\r\n            </Route>\r\n\r\n            <PublicRoute\r\n              restricted\r\n              redirectTo={routes.contacts}\r\n              path={routes.register}\r\n            >\r\n              <RegisterView />\r\n            </PublicRoute>\r\n\r\n            <PublicRoute\r\n              restricted\r\n              redirectTo={routes.contacts}\r\n              path={routes.login}\r\n            >\r\n              <LoginView />\r\n            </PublicRoute>\r\n\r\n            <PrivateRoute\r\n              redirectTo={routes.login}\r\n              path={routes.contacts}\r\n              component={ContactsView}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\nimport logger from 'redux-logger';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst persist = {\r\n  store,\r\n  persistor,\r\n};\r\n\r\nexport default persist;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport persist from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nconst { store, persistor } = persist;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nconst fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n};\r\n\r\nexport default actions;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst actions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default actions;\r\n","import axios from 'axios';\r\nimport actions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n// credentials - state формы\r\nconst register = credentials => async dispatch => {\r\n  dispatch(actions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(actions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(actions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(actions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(actions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(actions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(actions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(actions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(actions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst authOperations = { register, logIn, logOut, getCurrentUser };\r\n\r\nexport default authOperations;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './auth-actions';\r\n\r\nconst {\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} = actions;\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nconst authReducer = combineReducers({ user, isAuthenticated, token, error });\r\n\r\nexport default authReducer;\r\n","const isAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nconst authSelectors = { isAuthenticated, getUserEmail };\r\n\r\nexport default authSelectors;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({ items, filter, error });\r\n\r\nexport default contactsReducer;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nconst contactsSelectors = { getFilter, getVisibleContacts };\r\n\r\nexport default contactsSelectors;\r\n","import axios from 'axios';\r\nimport actions from './contacts-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(actions.fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch(err => dispatch(actions.fetchContactError(err.message)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch(err => dispatch(actions.addContactError(err.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch(err => dispatch(actions.deleteContactError(err.message)));\r\n};\r\n\r\nconst contactsOperations = { addContact, deleteContact, fetchContacts };\r\n\r\nexport default contactsOperations;\r\n"],"sourceRoot":""}