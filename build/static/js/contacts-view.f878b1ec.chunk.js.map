{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","views/ContactsView/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","toLowerCase","v4","options","buf","rnds","random","id","uuidv4","Filter","dispatch","useDispatch","useSelector","contactsSelectors","getFilter","className","htmlFor","type","name","onChange","e","contactsActions","changeFilter","target","placeholder","autoComplete","ContactForm","useState","number","contact","setContact","handleChange","prev","nameInputId","numberInputId","onSubmit","preventDefault","contactsOperations","addContact","alert","ContactList","contacts","getVisibleContacts","map","onClick","deleteContact","onDelete","ContactView","useEffect","fetchContacts"],"mappings":"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","file":"static/js/contacts-view.f878b1ec.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\r\n\r\nimport './Filter.scss';\r\n\r\nconst id = uuidv4();\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n\r\n  const onChange = e => {\r\n    dispatch(contactsActions.changeFilter(e.target.value));\r\n  };\r\n  return (\r\n    <div className=\"Filter\">\r\n      <label htmlFor={id} className=\"Filter__label\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className=\"Filter__input\"\r\n        placeholder=\"Who are we looking for?\"\r\n        autoComplete=\"off\"\r\n        id={id}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { contactsOperations } from '../../redux/contacts';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './ContactForm.scss';\r\n\r\nexport default function ContactForm() {\r\n  const [contact, setContact] = useState({ name: '', number: '' });\r\n  const { name, number } = contact;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    setContact(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (name !== '' && number !== '') {\r\n      dispatch(contactsOperations.addContact(name, number));\r\n\r\n      setContact({ name: '', number: '' });\r\n      return;\r\n    }\r\n\r\n    alert('First fill all fields');\r\n  };\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  return (\r\n    <form className=\"ContactForm\" onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId} className=\"ContactForm__label\">\r\n        Name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={handleChange}\r\n        className=\"ContactForm__input\"\r\n        placeholder=\"Enter name\"\r\n        autoComplete=\"off\"\r\n        id={nameInputId}\r\n      ></input>\r\n\r\n      <label htmlFor={numberInputId} className=\"ContactForm__label\">\r\n        Number\r\n      </label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        onChange={handleChange}\r\n        className=\"ContactForm__input\"\r\n        placeholder=\"Enter number\"\r\n        autoComplete=\"off\"\r\n        id={numberInputId}\r\n      ></input>\r\n\r\n      <button className=\"ContactForm__button\" type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nimport './ContactList.scss';\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const onDelete = id => {\r\n    dispatch(contactsOperations.deleteContact(id));\r\n  };\r\n  return (\r\n    <ul className=\"ContactList\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className=\"ContactList__item\" key={id}>\r\n          <p className=\"ContactList__text\">\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"ContactList__button\"\r\n            onClick={() => onDelete(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport Filter from '../../components/Filter';\r\nimport ContactForm from '../../components/ContactForm';\r\nimport ContactList from '../../components/ContactList';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\n\r\nexport default function ContactView() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <ContactForm />\r\n\r\n      <Filter />\r\n\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}